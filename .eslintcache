[{"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\App.js":"2","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\store.js":"3","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\HomePage.js":"4","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\components\\PublicNavbar.js":"5","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\RegisterPage.js":"6","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\components\\AlertMsg.js":"7","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\LoginPage.js":"8","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\NotFoundPage.js":"9","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\reducers\\index.js":"10","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\actions\\auth.actions.js":"11","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\reducers\\auth.reducer.js":"12","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\apiService.js":"13","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\constants\\auth.constants.js":"14","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\reducers\\user.reducer.js":"15","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\constants\\user.constants.js":"16","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\config\\constants.js":"17","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\actions\\route.actions.js":"18","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\constants\\route.constants.js":"19","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\reducers\\route.reducer.js":"20","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\actions\\user.actions.js":"21","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\routes\\PrivateRoute.js":"22","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\routes\\UserLayout.js":"23","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\routes\\PublicLayout.js":"24","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\components\\LeftLayout.js":"25","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\routes\\AdminRoute.js":"26","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\routes\\AdminLayout.js":"27","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\actions\\booking.action.js":"28","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\constants\\booking.constants.js":"29","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\reducers\\booking.reducer.js":"30","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\BookingPage2.js":"31","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\reducers\\menu.reducer.js":"32","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\actions\\menu.actions.js":"33","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\constants\\menu.constants.js":"34","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\admin\\AdminPage.js":"35","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\admin\\BookingAdmin.js":"36","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\admin\\MenuAdmin.js":"37","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\admin\\EditMenuAdmin.js":"38","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\admin\\Footer.js":"39","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\admin\\HeaderAdmin.js":"40","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\components\\Footer.js":"41","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\reducers\\scroll.reducer.js":"42","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\constants\\scroll.constants.js":"43","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\actions\\scroll.action.js":"44","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\Gallery.js":"45","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\ItemDetail.js":"46","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\actions\\review.actions.js":"47","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\reducers\\review.reducer.js":"48","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\constants\\review.constants.js":"49","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\MenuPage2.js":"50","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\StoryPage2.js":"51"},{"size":270,"mtime":1610528599558,"results":"52","hashOfConfig":"53"},{"size":1551,"mtime":1611819522283,"results":"54","hashOfConfig":"53"},{"size":342,"mtime":1610094692738,"results":"55","hashOfConfig":"53"},{"size":1778,"mtime":1612877684878,"results":"56","hashOfConfig":"53"},{"size":2997,"mtime":1612672105057,"results":"57","hashOfConfig":"53"},{"size":4914,"mtime":1612878922092,"results":"58","hashOfConfig":"53"},{"size":320,"mtime":1610094673733,"results":"59","hashOfConfig":"53"},{"size":5313,"mtime":1611905769746,"results":"60","hashOfConfig":"53"},{"size":358,"mtime":1610094673731,"results":"61","hashOfConfig":"53"},{"size":570,"mtime":1612427192829,"results":"62","hashOfConfig":"53"},{"size":4663,"mtime":1613705238199,"results":"63","hashOfConfig":"53"},{"size":2610,"mtime":1611657191772,"results":"64","hashOfConfig":"53"},{"size":1052,"mtime":1610703493734,"results":"65","hashOfConfig":"53"},{"size":1886,"mtime":1612516509764,"results":"66","hashOfConfig":"53"},{"size":1213,"mtime":1610095320108,"results":"67","hashOfConfig":"53"},{"size":410,"mtime":1610095297323,"results":"68","hashOfConfig":"53"},{"size":596,"mtime":1610095371921,"results":"69","hashOfConfig":"53"},{"size":325,"mtime":1610348742029,"results":"70","hashOfConfig":"53"},{"size":120,"mtime":1610348892700,"results":"71","hashOfConfig":"53"},{"size":463,"mtime":1610348922122,"results":"72","hashOfConfig":"53"},{"size":1521,"mtime":1610510435896,"results":"73","hashOfConfig":"53"},{"size":437,"mtime":1610616962566,"results":"74","hashOfConfig":"53"},{"size":644,"mtime":1612233575923,"results":"75","hashOfConfig":"53"},{"size":1284,"mtime":1612877638805,"results":"76","hashOfConfig":"53"},{"size":1217,"mtime":1611893576094,"results":"77","hashOfConfig":"53"},{"size":421,"mtime":1610616518260,"results":"78","hashOfConfig":"53"},{"size":827,"mtime":1611805280829,"results":"79","hashOfConfig":"53"},{"size":1530,"mtime":1613705633691,"results":"80","hashOfConfig":"53"},{"size":643,"mtime":1610706822350,"results":"81","hashOfConfig":"53"},{"size":1100,"mtime":1611027996292,"results":"82","hashOfConfig":"53"},{"size":15782,"mtime":1612761271601,"results":"83","hashOfConfig":"53"},{"size":2413,"mtime":1612241909049,"results":"84","hashOfConfig":"53"},{"size":4052,"mtime":1613707019872,"results":"85","hashOfConfig":"53"},{"size":1592,"mtime":1612241871459,"results":"86","hashOfConfig":"53"},{"size":8953,"mtime":1613705809116,"results":"87","hashOfConfig":"53"},{"size":5627,"mtime":1612760824370,"results":"88","hashOfConfig":"53"},{"size":2440,"mtime":1612878707592,"results":"89","hashOfConfig":"53"},{"size":2268,"mtime":1611835323802,"results":"90","hashOfConfig":"53"},{"size":8919,"mtime":1613707002212,"results":"91","hashOfConfig":"53"},{"size":912,"mtime":1611559341502,"results":"92","hashOfConfig":"53"},{"size":846,"mtime":1612766839557,"results":"93","hashOfConfig":"53"},{"size":366,"mtime":1611819197000,"results":"94","hashOfConfig":"53"},{"size":40,"mtime":1611818574009,"results":"95","hashOfConfig":"53"},{"size":224,"mtime":1611819167763,"results":"96","hashOfConfig":"53"},{"size":3623,"mtime":1612426717829,"results":"97","hashOfConfig":"53"},{"size":6980,"mtime":1613707195050,"results":"98","hashOfConfig":"53"},{"size":1122,"mtime":1612430097757,"results":"99","hashOfConfig":"53"},{"size":819,"mtime":1612429986840,"results":"100","hashOfConfig":"53"},{"size":404,"mtime":1612429933373,"results":"101","hashOfConfig":"53"},{"size":4495,"mtime":1612685674626,"results":"102","hashOfConfig":"53"},{"size":1483,"mtime":1612877593543,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1e3ewl5",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\index.js",[],["217","218"],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\App.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\store.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\HomePage.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\components\\PublicNavbar.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\RegisterPage.js",["219","220"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport authActions from \"../redux/actions/auth.actions\";\r\nimport routeActions from \"../redux/actions/route.actions\";\r\n\r\nconst RegisterPage = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  const [image, setImage] = useState(\"\");\r\n  const loading = useSelector((state) => state.auth.loading);\r\n  const redirectTo = useSelector((state) => state.route.redirectTo);\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, email, password, password2 } = formData;\r\n    if (password !== password2) {\r\n      setErrors({ ...errors, password2: \"Passwords do not match\" });\r\n      return;\r\n    }\r\n    dispatch(authActions.register({ name, email, password }));\r\n  };\r\n  useEffect(() => {\r\n    if (redirectTo) {\r\n      if (redirectTo === \"__GO_BACK__\") {\r\n        history.goBack();\r\n        dispatch(routeActions.removeRedirectTo());\r\n      } else {\r\n        history.push(redirectTo);\r\n        dispatch(routeActions.removeRedirectTo());\r\n      }\r\n    }\r\n  }, [dispatch, history, redirectTo]);\r\n\r\n  return (\r\n    <div style={{ marginTop: \"10%\" }}>\r\n      <Row>\r\n        <Col className=\"login\">\r\n          <div className=\"text-center mb-3\">\r\n            <h1 style={{ color: \"red\" }}>Sign Up</h1>\r\n            <p className=\"lead\" style={{ color: \"white\" }}>\r\n              Create Your Account\r\n            </p>\r\n          </div>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n              <Form.Control\r\n                style={{\r\n                  backgroundColor: \"black\",\r\n                  color: \"white\",\r\n                }}\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n              />\r\n              {errors.name && (\r\n                <small className=\"form-text text-danger\">{errors.name}</small>\r\n              )}\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                style={{\r\n                  backgroundColor: \"black\",\r\n                  color: \"white\",\r\n                }}\r\n                type=\"email\"\r\n                placeholder=\"Email Address\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n              />\r\n              {errors.email && (\r\n                <small className=\"form-text text-danger\">{errors.email}</small>\r\n              )}\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                style={{\r\n                  backgroundColor: \"black\",\r\n                  color: \"white\",\r\n                }}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n              />\r\n              {errors.password && (\r\n                <small className=\"form-text text-danger\">\r\n                  {errors.password}\r\n                </small>\r\n              )}\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                style={{\r\n                  backgroundColor: \"black\",\r\n                  color: \"white\",\r\n                }}\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                name=\"password2\"\r\n                value={formData.password2}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n\r\n            {loading ? (\r\n              <Button\r\n                className=\"btn-block\"\r\n                variant=\"primary\"\r\n                type=\"button\"\r\n                disabled\r\n              >\r\n                <span\r\n                  className=\"spinner-border spinner-border-sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                ></span>\r\n                Loading...\r\n              </Button>\r\n            ) : (\r\n              <Button className=\"btn-block\" type=\"submit\" variant=\"primary\">\r\n                Register\r\n              </Button>\r\n            )}\r\n\r\n            <p style={{ color: \"white\" }}>\r\n              Already have an account? <Link to=\"/login\">Sign In</Link>\r\n            </p>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\components\\AlertMsg.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\LoginPage.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\NotFoundPage.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\reducers\\index.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\actions\\auth.actions.js",["221"],"import * as types from \"../constants/auth.constants\";\r\nimport api from \"../../apiService\";\r\nimport { toast } from \"react-toastify\";\r\nimport routeActions from \"./route.actions\";\r\nimport Axios from \"axios\";\r\n\r\nconst loginRequest = ({ email, password }) => async (dispatch) => {\r\n  dispatch({ type: types.LOGIN_REQUEST, payload: null });\r\n  try {\r\n    const res = await api.post(\"/auth/login\", { email, password });\r\n    dispatch({ type: types.LOGIN_SUCCESS, payload: res.data.data });\r\n    toast.success(`Welcome ${email}`);\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({ type: types.LOGIN_FAILURE, payload: error });\r\n  }\r\n};\r\n\r\nconst loginFacebook = (access_token) => async (dispatch) => {\r\n  dispatch({ type: types.LOGIN_FACEBOOK_REQUEST, payload: null });\r\n  try {\r\n    const res = await api.post(\"/auth/login/facebook\", { access_token });\r\n    dispatch({ type: types.LOGIN_FACEBOOK_SUCCESS, payload: res.data.data });\r\n    const name = res.data.data.user.name;\r\n    toast.success(`Welcome ${name}`);\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({ type: types.LOGIN_FACEBOOK_FAILURE, payload: error });\r\n  }\r\n};\r\n\r\nconst loginGoogle = (access_token) => async (dispatch) => {\r\n  dispatch({ type: types.LOGIN_GOOGLE_REQUEST, payload: null });\r\n  try {\r\n    const res = await api.post(\"/auth/login/google\", { access_token });\r\n    dispatch({ type: types.LOGIN_GOOGLE_SUCCESS, payload: res.data.data });\r\n    const name = res.data.data.user.name;\r\n    toast.success(`Welcome ${name}`);\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({ type: types.LOGIN_GOOGLE_FAILURE, payload: error });\r\n  }\r\n};\r\n\r\nconst register = ({\r\n  name,\r\n  email,\r\n  password,\r\n\r\n  redirectTo = \"__GO_BACK__\",\r\n}) => async (dispatch) => {\r\n  dispatch({ type: types.REGISTER_REQUEST, payload: null });\r\n  try {\r\n    const res = await api.post(\"/users\", { name, email, password });\r\n    dispatch({ type: types.REGISTER_SUCCESS, payload: res.data.data });\r\n    toast.success(`Thank you for your registration, ${name}!`);\r\n    dispatch(routeActions.redirect(redirectTo));\r\n  } catch (error) {\r\n    dispatch({ type: types.REGISTER_FAILURE, payload: error });\r\n  }\r\n};\r\n\r\nconst getCurrentUser = (accessToken) => async (dispatch) => {\r\n  dispatch({ type: types.GET_CURRENT_USER_REQUEST, payload: null });\r\n  try {\r\n    api.defaults.headers.common[\"authorization\"] = accessToken;\r\n    const res = await api.get(\"/users/me\");\r\n    dispatch({\r\n      type: types.GET_CURRENT_USER_SUCCESS,\r\n      payload: { user: res.data.data, accessToken },\r\n    });\r\n  } catch (error) {\r\n    dispatch({ type: types.GET_CURRENT_USER_FAILURE, payload: error });\r\n  }\r\n};\r\n\r\nconst logout = () => (dispatch) => {\r\n  delete api.defaults.headers.common[\"authorization\"];\r\n  localStorage.removeItem(\"accessToken\");\r\n  dispatch({ type: types.LOGOUT, payload: null });\r\n};\r\n\r\nconst getTable = () => async (dispatch) => {\r\n  dispatch({ type: types.GET_TABLE_REQUEST, payload: null });\r\n  try {\r\n    const res = await api.get(\"/table\");\r\n    dispatch({\r\n      type: types.GET_TABLE_SUCCESS,\r\n      payload: { table: res.data.data },\r\n    });\r\n  } catch (error) {\r\n    dispatch({ type: types.GET_TABLE_FAILURE, payload: error });\r\n  }\r\n};\r\n\r\nconst selectDate = (date) => async (dispatch) => {\r\n  dispatch({ type: types.CREATE_TABLE_REQUEST, payload: null });\r\n  try {\r\n    const res = await api.post(\"/table\", { date });\r\n    dispatch({ type: types.CREATE_TABLE_SUCCESS, payload: res.data.data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({ type: types.CREATE_TABLE_FAILURE, payload: error });\r\n  }\r\n};\r\n\r\nconst getCurrentTable = (tableId) => async (dispatch) => {\r\n  dispatch({ type: types.GET_CURRENT_TABLE_REQUEST, payload: null });\r\n  try {\r\n    const res = await api.get(`/table/${tableId}`);\r\n    dispatch({\r\n      type: types.GET_CURRENT_TABLE_SUCCESS,\r\n      payload: res.data.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({ type: types.GET_CURRENT_TABLE_FAILURE, payload: error });\r\n  }\r\n};\r\n\r\nconst updateTable = (tableId, comment, status) => async (dispatch) => {\r\n  dispatch({ type: types.UPDATE_TABLE_REQUEST, payload: null });\r\n  try {\r\n    const body = { comment, status };\r\n    const res = await api.put(`/table/${tableId}`, body);\r\n    dispatch({\r\n      type: types.UPDATE_TABLE_SUCCESS,\r\n      payload: res.data.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({ type: types.UPDATE_TABLE_FAILURE, payload: error });\r\n  }\r\n};\r\n\r\nconst authActions = {\r\n  loginRequest,\r\n  register,\r\n  loginFacebook,\r\n  loginGoogle,\r\n  getCurrentUser,\r\n  logout,\r\n  getTable,\r\n  getCurrentTable,\r\n  updateTable,\r\n  selectDate,\r\n};\r\nexport default authActions;\r\n","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\reducers\\auth.reducer.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\apiService.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\constants\\auth.constants.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\reducers\\user.reducer.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\constants\\user.constants.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\config\\constants.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\actions\\route.actions.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\constants\\route.constants.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\reducers\\route.reducer.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\actions\\user.actions.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\routes\\PrivateRoute.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\routes\\UserLayout.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\routes\\PublicLayout.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\components\\LeftLayout.js",[],["222","223"],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\routes\\AdminRoute.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\routes\\AdminLayout.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\actions\\booking.action.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\constants\\booking.constants.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\reducers\\booking.reducer.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\BookingPage2.js",["224","225","226","227","228","229","230","231","232","233","234","235","236","237"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport authActions from \"../redux/actions/auth.actions\";\r\nimport bookingActions from \"../redux/actions/booking.action\";\r\nimport LoginPage from \"./LoginPage\";\r\n\r\nexport const BookingPage2 = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    date: \"\",\r\n    time: \"\",\r\n    tableId: \"\",\r\n    comment: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    date: \"\",\r\n    time: \"\",\r\n    tableId: \"\",\r\n    comment: \"\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const newTables = useSelector((state) => state.auth.newTables);\r\n  const singleTable = useSelector((state) => state.auth.singleTable);\r\n  const currentUserId = useSelector((state) => state.auth.user._id);\r\n  const [show, setShow] = useState(false);\r\n  const [modal, setModal] = useState(1);\r\n  const [select, setSelect] = useState(\"ahihi\");\r\n  const [booking, setBooking] = useState(1);\r\n\r\n  const handleClose = () => {\r\n    dispatch(authActions.selectDate(formData.date));\r\n    setShow(false);\r\n  };\r\n\r\n  const handleShow = (e) => {\r\n    e.preventDefault();\r\n\r\n    //if authenticated\r\n    if (isAuthenticated && formData.tableId) {\r\n      const { name, email, date, time, tableId, comment } = formData;\r\n      if (singleTable.status === \"Pending\") {\r\n        setModal(2);\r\n      } else {\r\n        dispatch(\r\n          authActions.updateTable(tableId, comment, { status: \"Pending\" })\r\n        );\r\n        authActions.getTable();\r\n        dispatch(bookingActions.createBooking(tableId, currentUserId));\r\n        setModal(1);\r\n      }\r\n      setShow(true);\r\n    }\r\n    //else MODAL BODY, LOGIN\r\n    else {\r\n      setModal(3);\r\n      setShow(true);\r\n    }\r\n  };\r\n\r\n  const handleGetTable = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const { name, email, date, time, tableId, comment } = formData;\r\n    dispatch(authActions.getCurrentTable(tableId));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleConfirmDate = (e) => {\r\n    e.preventDefault();\r\n    if (booking === 1) {\r\n      dispatch(authActions.selectDate(formData.date));\r\n      setBooking(2);\r\n    } else {\r\n      setBooking(1);\r\n      setFormData({\r\n        ...formData,\r\n        tableId: \"\",\r\n        time: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  let d = new Date();\r\n  let n = d.toISOString().split(\"T\");\r\n\r\n  const handleTime = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value, tableId: \"\" });\r\n  };\r\n\r\n  const test = (e) => {\r\n    e.preventDefault();\r\n    setSelect(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(authActions.getTable());\r\n  }, [dispatch, formData, newTables]);\r\n  return (\r\n    <div\r\n      className=\"booking darken-pseudo darken-with-text\"\r\n      id=\"booking\"\r\n      style={{ backgroundImage: \"url(images/booking2.jpg)\" }}\r\n    >\r\n      {formData.time ? (\r\n        <div className=\"tables fade-in\">\r\n          <div>\r\n            <center className=\"text\">\r\n              <h4>Choose table type</h4>\r\n            </center>\r\n          </div>\r\n          <div className=\"table-list\">\r\n            {newTables &&\r\n              newTables\r\n                .filter((table) => {\r\n                  return table.time === formData.time;\r\n                })\r\n                .reduce((total, table) => {\r\n                  let tableArray = total.map((table) => table.tableName);\r\n                  if (!tableArray.includes(table.tableName)) {\r\n                    return [...total, table];\r\n                  }\r\n                  return total;\r\n                }, [])\r\n                .map((table) => {\r\n                  return (\r\n                    <div className=\"tablez\">\r\n                      {\r\n                        <span\r\n                          className={`centered ${\r\n                            select === table._id\r\n                              ? \"select\"\r\n                              : table.status === \"Booked\"\r\n                              ? \"booked\"\r\n                              : table.status === \"Pending\"\r\n                              ? \"pending\"\r\n                              : \"\"\r\n                          }`}\r\n                        >{`${table.tableName}`}</span>\r\n                      }\r\n                      {table.tableName === \"T1\" ||\r\n                      table.tableName === \"T2\" ||\r\n                      table.tableName === \"T3\" ? (\r\n                        <svg\r\n                          width=\"9vw\"\r\n                          height=\"9vw\"\r\n                          xmlns=\"images/table_2.png\"\r\n                        >\r\n                          <image\r\n                            href=\"https://res.cloudinary.com/dopdu3ttp/image/upload/c_crop,h_128,w_128/v1612343365/table_2_ykidp6.png\"\r\n                            height=\"100%\"\r\n                            width=\"100%\"\r\n                          />\r\n                        </svg>\r\n                      ) : table.tableName === \"T4\" ||\r\n                        table.tableName === \"T5\" ? (\r\n                        <svg\r\n                          width=\"9vw\"\r\n                          height=\"9vw\"\r\n                          xmlns=\"images/table_4.png\"\r\n                        >\r\n                          <image\r\n                            href=\"https://res.cloudinary.com/dopdu3ttp/image/upload/c_crop,h_128,w_135/v1612343380/table_4_alufqr.png\"\r\n                            height=\"100%\"\r\n                            width=\"100%\"\r\n                          />\r\n                        </svg>\r\n                      ) : table.tableName === \"T6\" ? (\r\n                        <svg\r\n                          width=\"9vw\"\r\n                          height=\"9vw\"\r\n                          xmlns=\"images/table_6.png\"\r\n                        >\r\n                          <image\r\n                            href=\"https://res.cloudinary.com/dopdu3ttp/image/upload/c_crop,h_128,w_180/v1612343390/table_6_rowrvn.png\"\r\n                            height=\"100%\"\r\n                            width=\"100%\"\r\n                          />\r\n                        </svg>\r\n                      ) : (\r\n                        <svg\r\n                          width=\"9vw\"\r\n                          height=\"9vw\"\r\n                          xmlns=\"images/table_8.png\"\r\n                        >\r\n                          <image\r\n                            href=\"https://res.cloudinary.com/dopdu3ttp/image/upload/v1612343401/table_8_mncvrh.png\"\r\n                            height=\"100%\"\r\n                            width=\"100%\"\r\n                          />\r\n                        </svg>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n          </div>\r\n          <center className=\"tableFooter\">\r\n            <span style={{ color: \"#00e6e6\" }}>Your table</span>{\" \"}\r\n            <span className=\"text\">Available</span>{\" \"}\r\n            <span style={{ color: \" #df2329\" }}>Booked</span>{\" \"}\r\n            <span style={{ color: \"  #e6b800\" }}>Pending</span>\r\n          </center>\r\n        </div>\r\n      ) : null}\r\n\r\n      <div className=\"booking2\">\r\n        <center className=\"text\" style={{ height: \"10%\", width: \"80%\" }}>\r\n          <h4>BOOK A TABLE ONLINE</h4>\r\n        </center>\r\n        <div className=\"booking-in\">\r\n          {booking === 1 ? (\r\n            <>\r\n              {\" \"}\r\n              <center className=\"text\" style={{ height: \"10%\", width: \"80%\" }}>\r\n                <h6>Choose your date </h6>\r\n              </center>\r\n              <Form.Control\r\n                style={{\r\n                  width: \"50%\",\r\n                  backgroundColor: \"black\",\r\n                  color: \"white\",\r\n                }}\r\n                type=\"name\"\r\n                placeholder=\"Your Name\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Control\r\n                style={{\r\n                  width: \"50%\",\r\n                  backgroundColor: \"black\",\r\n                  color: \"white\",\r\n                }}\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n              />\r\n              {booking === 1 ? (\r\n                <Form.Control\r\n                  style={{\r\n                    fontSize: \"3vh\",\r\n                    width: \"50%\",\r\n                    backgroundColor: \"black\",\r\n                    color: \"white\",\r\n                  }}\r\n                  type=\"date\"\r\n                  custom\r\n                  value={formData.date}\r\n                  name=\"date\"\r\n                  onChange={handleChange}\r\n                  min={`${n[0]}`}\r\n                ></Form.Control>\r\n              ) : (\r\n                <Form.Control\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexWrap: \"wrap\",\r\n                    fontSize: \"3vh\",\r\n                    width: \"50%\",\r\n                    backgroundColor: \"black\",\r\n                    color: \"white\",\r\n                  }}\r\n                  type=\"date\"\r\n                  custom\r\n                  disabled\r\n                ></Form.Control>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <div className=\"booking-in fade-in\">\r\n              <center className=\"text\" style={{ height: \"10%\", width: \"80%\" }}>\r\n                <h6>Last Step </h6>\r\n              </center>\r\n              <Form.Control\r\n                onChange={handleTime}\r\n                style={{\r\n                  width: \"50%\",\r\n                  backgroundColor: \"black\",\r\n                  color: \"white\",\r\n                }}\r\n                as=\"select\"\r\n                custom\r\n                name=\"time\"\r\n                value={formData.time}\r\n                defaultValue=\"Time\"\r\n              >\r\n                <option>Time</option>\r\n                {newTables &&\r\n                  newTables\r\n                    .reduce((total, table) => {\r\n                      let timeArray = total.map((table) => table.time);\r\n                      if (!timeArray.includes(table.time)) {\r\n                        return [...total, table];\r\n                      }\r\n                      return total;\r\n                    }, [])\r\n                    .map((table) => {\r\n                      return <option>{`${table.time}`}</option>;\r\n                    })}\r\n              </Form.Control>\r\n              <Form.Control\r\n                style={{\r\n                  width: \"50%\",\r\n                  backgroundColor: \"black\",\r\n                  color: \"white\",\r\n                }}\r\n                as=\"select\"\r\n                id=\"inlineFormCustomSelect\"\r\n                name=\"tableId\"\r\n                custom\r\n                value={formData.tableId}\r\n                onChange={handleGetTable}\r\n                onClick={test}\r\n                defaultValue=\"Choose your tablez\"\r\n              >\r\n                <option>Choose your Table</option>\r\n                {newTables &&\r\n                  newTables\r\n                    .filter((table) => {\r\n                      return table.time === formData.time;\r\n                    })\r\n                    .reduce((total, table) => {\r\n                      let tableArray = total.map((table) => table.tableName);\r\n                      if (!tableArray.includes(table.tableName)) {\r\n                        return [...total, table];\r\n                      }\r\n                      return total;\r\n                    }, [])\r\n                    .map((table) => {\r\n                      if (table.status === \"Booked\") {\r\n                        return (\r\n                          <option\r\n                            key={`${table._id}`}\r\n                            disabled\r\n                            style={{ color: \"red\" }}\r\n                          >{`${table.tableName} (${table.status})`}</option>\r\n                        );\r\n                      }\r\n                      if (table.status === \"Pending\") {\r\n                        return (\r\n                          <option\r\n                            key={`${table._id}`}\r\n                            disabled\r\n                            style={{ color: \"#e6b800\" }}\r\n                          >{`${table.tableName} (${table.status})`}</option>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <option\r\n                            key={`${table._id}`}\r\n                            value={`${table._id}`}\r\n                            style={{ color: \"green\" }}\r\n                          >{`${table.tableName} (${table.status})`}</option>\r\n                        );\r\n                      }\r\n                    })}\r\n              </Form.Control>\r\n              <Form.Control\r\n                style={{\r\n                  width: \"50%\",\r\n                  backgroundColor: \"black\",\r\n                  color: \"white\",\r\n                }}\r\n                type=\"comment\"\r\n                name=\"comment\"\r\n                placeholder=\"Special offer or allergic to..\"\r\n                value={formData.comment}\r\n                onChange={handleChange}\r\n              />\r\n              <button\r\n                className=\"booking-panel\"\r\n                onClick={handleShow}\r\n                style={{\r\n                  fontSize: \"50%\",\r\n                  color: \"white\",\r\n                  backgroundColor: \"#b32d00\",\r\n                  width: \"40%\",\r\n                  height: \"20%\",\r\n                }}\r\n              >\r\n                Reserve a Table\r\n              </button>\r\n\r\n              <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header className=\"backModal\" closeButton>\r\n                  <Modal.Title style={{ color: \"red\" }}>\r\n                    {\" \"}\r\n                    Reservation Pending\r\n                  </Modal.Title>\r\n                </Modal.Header>\r\n\r\n                {modal === 1 ? (\r\n                  <Modal.Body className=\"backModal text\">\r\n                    Thank you for booking with Koji. Your booking has been sent\r\n                    to us. We will send you an email to confirm your\r\n                    reservation. Thank you!\r\n                  </Modal.Body>\r\n                ) : modal === 2 ? (\r\n                  <Modal.Body className=\"backModal text\">\r\n                    Sorry, you can only book table at one time only. If you want\r\n                    to change your decision, fell free to contact us. Thank you.\r\n                  </Modal.Body>\r\n                ) : (\r\n                  <Modal.Body className=\"backModal text\">\r\n                    <LoginPage />\r\n                  </Modal.Body>\r\n                )}\r\n\r\n                <Modal.Footer className=\"backModal text\">\r\n                  <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </div>\r\n          )}\r\n\r\n          <button\r\n            style={{\r\n              fontSize: \"50%\",\r\n              color: \"white\",\r\n              backgroundColor: \"#ffcc99\",\r\n              width: \"45%\",\r\n              height: \"10%\",\r\n            }}\r\n            onClick={handleConfirmDate}\r\n          >\r\n            {booking === 1 ? \"Confirm Date\" : \"Chose Another Day\"}\r\n          </button>\r\n        </div>\r\n        {/*  */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default BookingPage2;\r\n","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\reducers\\menu.reducer.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\actions\\menu.actions.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\constants\\menu.constants.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\admin\\AdminPage.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\admin\\BookingAdmin.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\admin\\MenuAdmin.js",["238","239"],"import React from \"react\";\r\nimport { Card, Col } from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nexport const MenuAdmin = ({ menu, handleMenu, menuSelect }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"scrollbar\">\r\n        <Row>\r\n          <Col className=\"menu\">\r\n            <h3>Food:</h3>\r\n            <div className=\"fb\">\r\n              {menu\r\n                .filter((dish) => dish.isDeleted === false)\r\n                .map((dish) => {\r\n                  if (dish.type === \"Food\") {\r\n                    return (\r\n                      <Card\r\n                        onClick={() => handleMenu(dish.name)}\r\n                        className={` ${\r\n                          menuSelect === dish.name ? \"cardSelect\" : \"card\"\r\n                        }`}\r\n                      >\r\n                        <Card.Img variant=\"top\" src={dish.image} />\r\n                        <Card.Body>\r\n                          <Card.Title>{`${dish.name}`}</Card.Title>\r\n                          <Card.Text className=\"price\">\r\n                            Price: {`${dish.price}`}\r\n                          </Card.Text>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    );\r\n                  }\r\n                })}\r\n            </div>\r\n          </Col>\r\n\r\n          <Col className=\"menu\">\r\n            <h3>Drink:</h3>\r\n            <div className=\"fb\">\r\n              {menu\r\n                .filter((dish) => dish.isDeleted === false)\r\n                .map((dish) => {\r\n                  if (dish.type === \"Drink\") {\r\n                    return (\r\n                      <Card\r\n                        className={` ${\r\n                          menuSelect === dish.name ? \"cardSelect\" : \"card\"\r\n                        }`}\r\n                        onClick={() => handleMenu(dish.name)}\r\n                      >\r\n                        <Card.Img variant=\"top\" src={dish.image} />\r\n                        <Card.Body>\r\n                          <Card.Title>{`${dish.name}`}</Card.Title>\r\n                          <Card.Text className=\"price\">\r\n                            Price: {`${dish.price}`}\r\n                          </Card.Text>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    );\r\n                  }\r\n                })}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MenuAdmin;\r\n","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\admin\\EditMenuAdmin.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\admin\\Footer.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\admin\\HeaderAdmin.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\components\\Footer.js",["240","241","242"],"import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const Footer = () => {\r\n  const scroll = useSelector((state) => state.scroll.scroll);\r\n  //scroll = true -> is going down\r\n  return (\r\n    <div\r\n      className={scroll === true ? \"main-footer1\" : \"main-footer\"}\r\n      style={{\r\n        backgroundImage:\r\n          \"url(https://res.cloudinary.com/dopdu3ttp/image/upload/v1612668306/top-menu-bg_ibwbrt.jpg)\",\r\n      }}\r\n    >\r\n      <footer>\r\n        &copy; Copyright 2021{\" \"}\r\n        <a style={{ color: \"white\", textDecoration: \"none\" }} href=\"#\">\r\n          Koji restaurant\r\n        </a>{\" \"}\r\n        |\r\n        <a style={{ color: \"white\", textDecoration: \"none\" }} href=\"#\">\r\n          {\" \"}\r\n          Private Policy\r\n        </a>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\nexport default Footer;\r\n","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\reducers\\scroll.reducer.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\constants\\scroll.constants.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\actions\\scroll.action.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\Gallery.js",["243","244","245","246"],"import React, { useEffect } from \"react\";\r\nimport userActions from \"../redux/actions/user.actions\";\r\nimport menuActions from \"../redux/actions/menu.actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const Gallery = () => {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector((state) => state.user.users.length);\r\n  const menu = useSelector((state) => state.menu.menu);\r\n  const history = useHistory();\r\n\r\n  const handleClickOnItem = (id) => {\r\n    history.push(`/menu/${id}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(userActions.usersRequest());\r\n    dispatch(menuActions.getMenuList());\r\n  }, [dispatch]);\r\n  return (\r\n    <div className=\"main-gallery\">\r\n      <div className=\"gallery-header\">\r\n        <svg xmlns=\"images/table_2.png\" className=\"gallery-logo\">\r\n          <image\r\n            className=\"rounded-circle\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n            href=\"https://res.cloudinary.com/dopdu3ttp/image/upload/v1611909715/logo_u7xd8n.png\"\r\n          />\r\n        </svg>\r\n        <div className=\"gallery-content\">\r\n          <h3>Koji Saigon Modern Izakaya</h3>\r\n          <br />\r\n          <div className=\"gallery-info\">\r\n            <div>\r\n              <strong>{`${menu.length}`}</strong> dishes\r\n            </div>\r\n            <div style={{ marginLeft: \"10%\" }}>\r\n              <strong>{`${users}`}</strong> followers\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div>𝐎𝐏𝐄𝐍: 11:30am - 2:00pm and 5:00pm - 12:00am</div>\r\n          <div>\r\n            <a\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n              href=\"https://www.facebook.com/profile.php?id=100012152715341\"\r\n              target=\"_blank\"\r\n            >\r\n              {\" \"}\r\n              @thanhlaaiiiii{\" \"}\r\n            </a>\r\n            <a\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n              href=\"https://www.facebook.com/ngathuydao165\"\r\n              target=\"_blank\"\r\n            >\r\n              | @xucxich.trunglongdao\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"gallery-body\">\r\n        <div\r\n          className=\"divider-gallery\"\r\n          style={{\r\n            textAlign: \"center\",\r\n            width: \"100%\",\r\n            height: \"1px\",\r\n            margin: \"5px 0\",\r\n          }}\r\n        ></div>\r\n        <div className=\"row\">\r\n          {menu\r\n            .filter((item) => {\r\n              return item.isDeleted === false;\r\n            })\r\n            .map((item) => {\r\n              return (\r\n                <div className=\"col-md-4 col-sm-6 gallery-items\">\r\n                  <img\r\n                    className=\"img-fluid product-img\"\r\n                    src={`${item.image}`}\r\n                  />\r\n                  <div\r\n                    className=\"overlay\"\r\n                    onClick={() => handleClickOnItem(item._id)}\r\n                  >\r\n                    <span style={{ fontSize: \"1em\" }}>\r\n                      <i class=\"fas fa-heart back-img1 \">\r\n                        {\" \"}\r\n                        {` ${item.reactionCount}`}\r\n                      </i>\r\n                      <i class=\"fas fa-comment-dots back-img2\">\r\n                        {\" \"}\r\n                        {` ${item.reviewCount}`}\r\n                      </i>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Gallery;\r\n","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\ItemDetail.js",["247","248"],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\actions\\review.actions.js",["249","250"],"import * as types from \"../constants/review.constants\";\r\nimport api from \"../../apiService\";\r\nimport { toast } from \"react-toastify\";\r\nimport routeActions from \"./route.actions\";\r\n\r\nconst getReview = (id) => async (dispatch) => {\r\n  dispatch({ type: types.GET_REVIEW_REQUEST, payload: null });\r\n  try {\r\n    const res = await api.get(`/review/${id}`);\r\n    dispatch({\r\n      type: types.GET_REVIEW_SUCCESS,\r\n      payload: res.data.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({ type: types.GET_REVIEW_FAILURE, payload: error });\r\n  }\r\n};\r\n\r\nconst createReview = (menuId, content) => async (dispatch) => {\r\n  dispatch({ type: types.CREATE_REVIEW_REQUEST, payload: null });\r\n  try {\r\n    const body = { content };\r\n    const res = await api.post(`/review/${menuId}`, body);\r\n    dispatch({\r\n      type: types.CREATE_REVIEW_SUCCESS,\r\n      payload: res.data.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({ type: types.CREATE_REVIEW_FAILURE, payload: error });\r\n  }\r\n};\r\n\r\nconst reviewActions = {\r\n  getReview,\r\n  createReview,\r\n};\r\n\r\nexport default reviewActions;\r\n",["251","252"],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\reducers\\review.reducer.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\redux\\constants\\review.constants.js",[],"C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\MenuPage2.js",["253"],"import React, { useState } from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const MenuPage2 = () => {\r\n  const history = useHistory();\r\n  const [select, setSelect] = useState(1);\r\n  const handleChangeDrink = (e) => {\r\n    e.preventDefault();\r\n    setSelect(2);\r\n  };\r\n  const handleChangeFood = (e) => {\r\n    e.preventDefault();\r\n    setSelect(1);\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/gallery\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"menuC\">\r\n      <div className=\"menuNav\">\r\n        <h3 onClick={handleChangeFood} className=\"textMenu\">\r\n          FOOD\r\n        </h3>\r\n        <svg width=\"4vw\" height=\"4vw\" xmlns=\"images/table_4.png\">\r\n          <image href=\"images/line.png\" height=\"100%\" width=\"100%\" />\r\n        </svg>\r\n        <h3 onClick={handleChangeDrink} className=\"textMenu\">\r\n          DRINK\r\n        </h3>\r\n      </div>\r\n      <div className=\"menu1\">\r\n        {select === 1 ? (\r\n          <Carousel\r\n            indicators={false}\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n          >\r\n            <Carousel.Item\r\n              style={{ width: \"100%\", height: \"100%\" }}\r\n              interval={1000}\r\n            >\r\n              <img\r\n                style={{ width: \"100%\", height: \"100%\", objectFit: \"fill\" }}\r\n                className=\"d-block\"\r\n                src=\"https://res.cloudinary.com/dopdu3ttp/image/upload/v1612669073/signature4_sxrrzl.jpg\"\r\n                alt=\"First slide\"\r\n              />\r\n            </Carousel.Item>\r\n            <Carousel.Item\r\n              style={{ width: \"100%\", height: \"100%\" }}\r\n              interval={1000}\r\n            >\r\n              <img\r\n                style={{ width: \"100%\", height: \"100%\", objectFit: \"fill\" }}\r\n                className=\"d-block\"\r\n                src=\"https://res.cloudinary.com/dopdu3ttp/image/upload/v1612669074/signature1_z9bhdj.jpg\"\r\n                alt=\"Third slide\"\r\n              />\r\n            </Carousel.Item>\r\n            <Carousel.Item\r\n              interval={1000}\r\n              style={{ width: \"100%\", height: \"100%\" }}\r\n            >\r\n              <img\r\n                style={{ width: \"100%\", height: \"100%\", objectFit: \"fill\" }}\r\n                className=\"d-block \"\r\n                src=\"https://res.cloudinary.com/dopdu3ttp/image/upload/v1612669075/signature2_ombtty.jpg\"\r\n                alt=\"Third slide\"\r\n              />\r\n            </Carousel.Item>\r\n          </Carousel>\r\n        ) : (\r\n          <Carousel\r\n            indicators={false}\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n          >\r\n            <Carousel.Item\r\n              style={{ width: \"100%\", height: \"100%\" }}\r\n              interval={1000}\r\n            >\r\n              <img\r\n                style={{ width: \"100%\", height: \"100%\", objectFit: \"fill\" }}\r\n                className=\"d-block\"\r\n                src=\"https://res.cloudinary.com/dopdu3ttp/image/upload/v1612669918/cocktail1_ish1uw.jpg\"\r\n                alt=\"First slide\"\r\n              />\r\n            </Carousel.Item>\r\n            <Carousel.Item\r\n              style={{ width: \"100%\", height: \"100%\" }}\r\n              interval={1000}\r\n            >\r\n              <img\r\n                style={{ width: \"100%\", height: \"100%\", objectFit: \"fill\" }}\r\n                className=\"d-block\"\r\n                src=\"https://res.cloudinary.com/dopdu3ttp/image/upload/v1612669919/cocktail2_pwn4sz.jpg\"\r\n                alt=\"Third slide\"\r\n              />\r\n            </Carousel.Item>\r\n            <Carousel.Item\r\n              interval={1000}\r\n              style={{ width: \"100%\", height: \"100%\" }}\r\n            >\r\n              <img\r\n                style={{ width: \"100%\", height: \"100%\", objectFit: \"fill\" }}\r\n                className=\"d-block \"\r\n                src=\"https://res.cloudinary.com/dopdu3ttp/image/upload/v1612669918/cocktail4_xs7pyr.jpg\"\r\n                alt=\"Third slide\"\r\n              />\r\n            </Carousel.Item>\r\n          </Carousel>\r\n        )}\r\n        <section className=\"gallery portfolio-experiment\">\r\n          <a>\r\n            <div onClick={handleClick}>View All Menu</div>\r\n            <span className=\"line -right\"></span>\r\n            <span className=\"line -top\"></span>\r\n            <span className=\"line -left\"></span>\r\n            <span className=\"line -bottom\"></span>\r\n          </a>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MenuPage2;\r\n","C:\\Users\\ASUS\\Desktop\\coderschool\\Koji\\client\\src\\pages\\StoryPage2.js",[],{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":21,"column":10,"nodeType":"260","messageId":"261","endLine":21,"endColumn":15},{"ruleId":"258","severity":1,"message":"262","line":21,"column":17,"nodeType":"260","messageId":"261","endLine":21,"endColumn":25},{"ruleId":"258","severity":1,"message":"263","line":5,"column":8,"nodeType":"260","messageId":"261","endLine":5,"endColumn":13},{"ruleId":"254","replacedBy":"264"},{"ruleId":"256","replacedBy":"265"},{"ruleId":"258","severity":1,"message":"266","line":2,"column":18,"nodeType":"260","messageId":"261","endLine":2,"endColumn":21},{"ruleId":"258","severity":1,"message":"267","line":2,"column":23,"nodeType":"260","messageId":"261","endLine":2,"endColumn":32},{"ruleId":"258","severity":1,"message":"268","line":2,"column":47,"nodeType":"260","messageId":"261","endLine":2,"endColumn":50},{"ruleId":"258","severity":1,"message":"269","line":17,"column":10,"nodeType":"260","messageId":"261","endLine":17,"endColumn":16},{"ruleId":"258","severity":1,"message":"270","line":17,"column":18,"nodeType":"260","messageId":"261","endLine":17,"endColumn":27},{"ruleId":"258","severity":1,"message":"271","line":46,"column":15,"nodeType":"260","messageId":"261","endLine":46,"endColumn":19},{"ruleId":"258","severity":1,"message":"272","line":46,"column":21,"nodeType":"260","messageId":"261","endLine":46,"endColumn":26},{"ruleId":"258","severity":1,"message":"273","line":46,"column":28,"nodeType":"260","messageId":"261","endLine":46,"endColumn":32},{"ruleId":"258","severity":1,"message":"274","line":46,"column":34,"nodeType":"260","messageId":"261","endLine":46,"endColumn":38},{"ruleId":"258","severity":1,"message":"271","line":68,"column":13,"nodeType":"260","messageId":"261","endLine":68,"endColumn":17},{"ruleId":"258","severity":1,"message":"272","line":68,"column":19,"nodeType":"260","messageId":"261","endLine":68,"endColumn":24},{"ruleId":"258","severity":1,"message":"273","line":68,"column":26,"nodeType":"260","messageId":"261","endLine":68,"endColumn":30},{"ruleId":"258","severity":1,"message":"274","line":68,"column":32,"nodeType":"260","messageId":"261","endLine":68,"endColumn":36},{"ruleId":"258","severity":1,"message":"275","line":68,"column":47,"nodeType":"260","messageId":"261","endLine":68,"endColumn":54},{"ruleId":"276","severity":1,"message":"277","line":15,"column":29,"nodeType":"278","messageId":"279","endLine":15,"endColumn":31},{"ruleId":"276","severity":1,"message":"277","line":43,"column":29,"nodeType":"278","messageId":"279","endLine":43,"endColumn":31},{"ruleId":"258","severity":1,"message":"280","line":1,"column":17,"nodeType":"260","messageId":"261","endLine":1,"endColumn":25},{"ruleId":"281","severity":1,"message":"282","line":17,"column":9,"nodeType":"283","endLine":17,"endColumn":72},{"ruleId":"281","severity":1,"message":"282","line":21,"column":9,"nodeType":"283","endLine":21,"endColumn":72},{"ruleId":"258","severity":1,"message":"284","line":5,"column":10,"nodeType":"260","messageId":"261","endLine":5,"endColumn":15},{"ruleId":"285","severity":1,"message":"286","line":47,"column":13,"nodeType":"283","endLine":51,"endColumn":14},{"ruleId":"285","severity":1,"message":"286","line":55,"column":13,"nodeType":"283","endLine":59,"endColumn":14},{"ruleId":"287","severity":1,"message":"288","line":83,"column":19,"nodeType":"283","endLine":86,"endColumn":21},{"ruleId":"258","severity":1,"message":"289","line":47,"column":9,"nodeType":"260","messageId":"261","endLine":47,"endColumn":19},{"ruleId":"276","severity":1,"message":"277","line":122,"column":40,"nodeType":"278","messageId":"279","endLine":122,"endColumn":42},{"ruleId":"258","severity":1,"message":"290","line":3,"column":10,"nodeType":"260","messageId":"261","endLine":3,"endColumn":15},{"ruleId":"258","severity":1,"message":"291","line":4,"column":8,"nodeType":"260","messageId":"261","endLine":4,"endColumn":20},{"ruleId":"254","replacedBy":"292"},{"ruleId":"256","replacedBy":"293"},{"ruleId":"281","severity":1,"message":"294","line":116,"column":11,"nodeType":"283","endLine":116,"endColumn":14},"no-native-reassign",["295"],"no-negated-in-lhs",["296"],"no-unused-vars","'image' is assigned a value but never used.","Identifier","unusedVar","'setImage' is assigned a value but never used.","'Axios' is defined but never used.",["295"],["296"],"'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'name' is assigned a value but never used.","'email' is assigned a value but never used.","'date' is assigned a value but never used.","'time' is assigned a value but never used.","'comment' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Image' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'handleEdit' is assigned a value but never used.","'toast' is defined but never used.","'routeActions' is defined but never used.",["295"],["296"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]